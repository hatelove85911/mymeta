---

- name: build my mothership
  hosts: 127.0.0.1
  connection: local
  environment:
    PATH: "./node_modules/.bin:$HOME/bin:/usr/local/bin:{{ ansible_env.PATH }}"


  vars:
      common:
          packages:
            # development tools
            - zsh
            - git
            - tmux
            - nginx
            # db
            - mongodb
            # utilities
            - unison
            - tree
            - watch
            - cmake
            - ruby
            - python3
            - httpie # http clinet for human
          nvm_version: "0.30.0"
          git_global_conifg:
            - user.email "redwolf85911@gmail.com"
            - user.name "junshen"
            - diff.tool vimdiff
            - difftool.prompt false
            - alias.dt difftool
            - alias.df diff
            - merge.tool vimdiff
            - merge.conflictstyle diff3
            - mergetool.prompt false
          python_packages:
            - cheat
          node_modules:
            - eslint  # pluggable linting utility for javascript and jsx
            - standard  # javascript standard code checker
            - node-inspector
            - devtool # the best debugger on node
            - iron-node # node debugger 
            - jsonlint # eslint json checker
            - yeoman-doctor
            - yo
            - medium-cli # medium blog from command line
            - instant-markdown-d # preview markdown in vim server
            - hexo # nodejs blogging generator
            - grunt-cli
            #- n # mini node version manager
          gem:
            - jekyll
            - bundler
            - rake
      osx:
          packages:
            - vim
            - node
            - rename
            - python3
            - rethinkdb
            - fswatch
            - archey
            - Lorem
            - the_silver_searcher # ag, t,he code line search used by ag.vim vim plugin which is again used by ctrlspace vim plugin
            - fzf  # command line fuzzy finder
            - peco # Simplistic interactive filtering tool
            - fasd # Command-line productivity booster, offers quick access to files and directories, inspired by autojump, z and v.

          python_packages:
            - vim-gtk
            - macfsevents

          casks:
            - nvalt
            - vagrant
            - vagrant-manager
            - virtualbox
            - google-chrome
            - iterm2
            - sublime-text
            - karabiner
            - purevpn
            - spectacle
            - skitch
            - skype
            - launchcontrol  # the launchctl gui, easier for trouble shooting
            - libreoffice
            - dropbox
            - alfred
            - recordit # a screen recorder to generate gif or tweet
      ubuntu:
          ppa:
            - ppa:nginx/stable
            - ppa:git-core/ppa
            - ppa:pi-rho/dev   # tmux
          packages:
            - nodejs
            - silversearcher-ag
            - libxml2-utils
            - xclip
            - corkscrew

  tasks:
############################################################
### set facts based on underlying OS 
############################################################
  - name: set facts when it's Ubuntu
    set_fact:
      env:
        PATH: "./node_modules/.bin:$HOME/bin:{{ ansible_env.PATH }}"
        http_proxy: http://proxy.sin.sap.corp:8080
        https_proxy: http://proxy.sin.sap.corp:8080
      zshbin: /usr/bin/zsh
    when: ansible_distribution == "Ubuntu"

  - name: set facts when it's OSX
    set_fact:
      env:
        PATH: "./node_modules/.bin:$HOME/bin:/usr/local/bin:{{ ansible_env.PATH }}"
      zshbin: /usr/local/bin/zsh
    when: ansible_distribution == "MacOSX"

############################################################
### osx
############################################################
  
######## update homebrew twice to solve strange issues #####

  - name: upgrade homebrew
    homebrew: update_homebrew=yes     
    when: ansible_distribution == "MacOSX"

  - name: upgrade homebrew
    homebrew: update_homebrew=yes
    when: ansible_distribution == "MacOSX"
############################################################


  - name: install common packages
    homebrew: name={{item}} state=latest
    with_items: "{{common.packages}}"
    when: ansible_distribution == "MacOSX"

  - name: install osx specific packages
    homebrew: name={{item}} state=latest
    with_items: "{{osx.packages}}"
    when: ansible_distribution == "MacOSX"

  - name: install brew casks
    homebrew_cask: name={{item}} 
    with_items: "{{ osx.casks }}"
    when: ansible_distribution == "MacOSX"

  - name: install unox for unison synchorinization to work on osx
    sudo: yes
    shell: curl -o /usr/local/bin/unison-fsmonitor https://raw.githubusercontent.com/jumpstarter-io/unox/master/unox.py && chmod 755 /usr/local/bin/unison-fsmonitor
    when: ansible_distribution == "MacOSX"
  
  - name: install osx python packagess
    sudo: yes
    pip: name={{item}} state=latest
    with_items: "{{ osx.python_packages }}"
    when: ansible_distribution == "MacOSX"

############################################################
### ubuntu
############################################################

  - name: add ppa
    sudo: yes
    apt_repository: repo={{item}}
    with_items: "{{ubuntu.ppa}}"
    environment: "{{env}}"
    when: ansible_distribution == "Ubuntu"

  - name: install packages
    sudo: yes
    apt: pkg={{item}} update_cache=yes state=latest
    with_items: "{{ common.packages }}"
    environment: "{{env}}"
    when: ansible_distribution == "Ubuntu"

  - name: add latest node debian repository
    sudo: yes
    shell: curl -sL https://deb.nodesource.com/setup_5.x | bash -
    environment: "{{env}}"
    when: ansible_distribution == "Ubuntu"

  - name: install ubuntu packages
    sudo: yes
    apt: pkg={{item}} update_cache=yes state=latest
    with_items: "{{ ubuntu.packages }}"
    environment: "{{env}}"
    when: ansible_distribution == "Ubuntu"

  - name: link /usr/bin/nodejs to /usr/bin/node 
    sudo: yes
    file: src=/usr/bin/nodejs dest=/usr/bin/node state=link force=yes
    when: ansible_distribution == "Ubuntu"

  - name: config ssh over http proxy - copy sshconfig to ~/.ssh/config
    sudo: yes
    file: src=~/Dropbox/mymeta/mothership/linux_vm/sshconfig dest=~/.ssh/config state=link force=yes
    when: ansible_distribution == "Ubuntu"

#############################################################
### common
############################################################
# git
  - name: symlink ~/.gitconfig
    file: src=~/Dropbox/mymeta/home/.gitconfig dest=~/.gitconfig state=link force=yes

# oh my zsh
  - name: install oh my zsh
    shell: sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

  - name: mkdir .zsh-antigen
    file: path=~/.zsh-antigen state=directory

  - name: download antigen.sh
    shell: curl -L https://raw.githubusercontent.com/zsh-users/antigen/master/antigen.zsh chdir=~/.zsh-antigen

  - name: symlink ~/.zshenv
    file: src=~/Dropbox/mymeta/home/.zshenv dest=~/.zshenv state=link force=yes

  - name: symlink ~/.zshrc
    file: src=~/Dropbox/mymeta/home/.zshrc dest=~/.zshrc state=link force=yes

  - name: set zsh as default shell
    sudo: yes
    shell: chsh -s {{zshbin}} {{ ansible_ssh_user }}

# ~/bin
  - name: symlink ~/bin
    file: src=~/Dropbox/mymeta/home/bin dest=~/bin state=link force=yes

# ~/.cheat
  - name: symlink ~/.cheat
    file: src=~/Dropbox/mymeta/home/.cheat dest=~/.cheat state=link force=yes

# nvm
  - name: install nvm
    shell: curl -o- https://raw.githubusercontent.com/creationix/nvm/v{{ common.nvm_version }}/install.sh | bash

# global npm module
  - name: install global npm module
    sudo: yes
    npm: name={{item}} global=yes state=latest
    with_items: "{{common.node_modules}}"
    environment: "{{env}}"

# vim
  - name: install vundle ( vim plugin manager )
    git: repo=https://github.com/VundleVim/Vundle.vim.git dest=~/.vim/bundle/Vundle.vim force=yes

  - name: symlink ~/.vimrc
    file: src=~/Dropbox/mymeta/home/.vimrc dest=~/.vimrc state=link force=yes

  - name: install vundle plugins
    shell: echo | echo | vim -c PluginInstall -c qall
    ignore_errors: yes
    # shell: vim -c source ~/.vimrc +PluginInstall +qall

  - name: symlink ~/.vim/Ultisnips
    file: src=~/Dropbox/mymeta/home/Ultisnips dest=~/.vim/UltiSnips state=link force=yes

  - name: make vimproc.vim plugin
    shell: make chdir=~/.vim/bundle/vimproc.vim 

  - name: cmake youcompleteme
    shell: ./install.sh chdir=~/.vim/bundle/YouCompleteMe

  - name: install tern_for_vim
    shell: npm install chdir=~/.vim/bundle/tern_for_vim

# tmux
  - name: symlink ~/.tmux.conf
    file: src=~/Dropbox/mymeta/home/.tmux.conf dest=~/.tmux.conf state=link force=yes

  - name: install tpm, the package manager for tmux
    git: repo=https://github.com/tmux-plugins/tpm dest=~/.tmux/plugins/tpm force=yes

  - name: install tpm plugins
    shell: ~/.tmux/plugins/tpm/bin/install_plugins
